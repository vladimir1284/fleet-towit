/* tslint:disable */
/* eslint-disable */
/**
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NodeCommandProperty } from './NodeCommandProperty';
import {
	NodeCommandPropertyFromJSON,
	NodeCommandPropertyFromJSONTyped,
	NodeCommandPropertyToJSON
} from './NodeCommandProperty';

/**
 *
 * @export
 * @interface NodeCommand
 */
export interface NodeCommand {
	/**
	 *
	 * @type {boolean}
	 * @memberof NodeCommand
	 */
	isSystemCommandType?: boolean;
	/**
	 *
	 * @type {string}
	 * @memberof NodeCommand
	 */
	nodeCommandType?: string;
	/**
	 *
	 * @type {Array<NodeCommandProperty>}
	 * @memberof NodeCommand
	 */
	nodeCommandProperties?: Array<NodeCommandProperty>;
}

/**
 * Check if a given object implements the NodeCommand interface.
 */
export function instanceOfNodeCommand(value: object): boolean {
	let isInstance = true;

	return isInstance;
}

export function NodeCommandFromJSON(json: any): NodeCommand {
	return NodeCommandFromJSONTyped(json, false);
}

export function NodeCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodeCommand {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		isSystemCommandType: !exists(json, 'isSystemCommandType')
			? undefined
			: json['isSystemCommandType'],
		nodeCommandType: !exists(json, 'nodeCommandType') ? undefined : json['nodeCommandType'],
		nodeCommandProperties: !exists(json, 'nodeCommandProperties')
			? undefined
			: (json['nodeCommandProperties'] as Array<any>).map(NodeCommandPropertyFromJSON)
	};
}

export function NodeCommandToJSON(value?: NodeCommand | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		isSystemCommandType: value.isSystemCommandType,
		nodeCommandType: value.nodeCommandType,
		nodeCommandProperties:
			value.nodeCommandProperties === undefined
				? undefined
				: (value.nodeCommandProperties as Array<any>).map(NodeCommandPropertyToJSON)
	};
}
