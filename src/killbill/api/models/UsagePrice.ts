/* tslint:disable */
/* eslint-disable */
/**
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TierPrice } from './TierPrice';
import { TierPriceFromJSON, TierPriceFromJSONTyped, TierPriceToJSON } from './TierPrice';

/**
 *
 * @export
 * @interface UsagePrice
 */
export interface UsagePrice {
	/**
	 *
	 * @type {string}
	 * @memberof UsagePrice
	 */
	usageName?: string;
	/**
	 *
	 * @type {string}
	 * @memberof UsagePrice
	 */
	usageType?: UsagePriceUsageTypeEnum;
	/**
	 *
	 * @type {string}
	 * @memberof UsagePrice
	 */
	billingMode?: UsagePriceBillingModeEnum;
	/**
	 *
	 * @type {string}
	 * @memberof UsagePrice
	 */
	tierBlockPolicy?: UsagePriceTierBlockPolicyEnum;
	/**
	 *
	 * @type {Array<TierPrice>}
	 * @memberof UsagePrice
	 */
	tierPrices?: Array<TierPrice>;
}

/**
 * @export
 */
export const UsagePriceUsageTypeEnum = {
	Capacity: 'CAPACITY',
	Consumable: 'CONSUMABLE'
} as const;
export type UsagePriceUsageTypeEnum =
	(typeof UsagePriceUsageTypeEnum)[keyof typeof UsagePriceUsageTypeEnum];

/**
 * @export
 */
export const UsagePriceBillingModeEnum = {
	Advance: 'IN_ADVANCE',
	Arrear: 'IN_ARREAR'
} as const;
export type UsagePriceBillingModeEnum =
	(typeof UsagePriceBillingModeEnum)[keyof typeof UsagePriceBillingModeEnum];

/**
 * @export
 */
export const UsagePriceTierBlockPolicyEnum = {
	AllTiers: 'ALL_TIERS',
	TopTier: 'TOP_TIER'
} as const;
export type UsagePriceTierBlockPolicyEnum =
	(typeof UsagePriceTierBlockPolicyEnum)[keyof typeof UsagePriceTierBlockPolicyEnum];

/**
 * Check if a given object implements the UsagePrice interface.
 */
export function instanceOfUsagePrice(value: object): boolean {
	let isInstance = true;

	return isInstance;
}

export function UsagePriceFromJSON(json: any): UsagePrice {
	return UsagePriceFromJSONTyped(json, false);
}

export function UsagePriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsagePrice {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		usageName: !exists(json, 'usageName') ? undefined : json['usageName'],
		usageType: !exists(json, 'usageType') ? undefined : json['usageType'],
		billingMode: !exists(json, 'billingMode') ? undefined : json['billingMode'],
		tierBlockPolicy: !exists(json, 'tierBlockPolicy') ? undefined : json['tierBlockPolicy'],
		tierPrices: !exists(json, 'tierPrices')
			? undefined
			: (json['tierPrices'] as Array<any>).map(TierPriceFromJSON)
	};
}

export function UsagePriceToJSON(value?: UsagePrice | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		usageName: value.usageName,
		usageType: value.usageType,
		billingMode: value.billingMode,
		tierBlockPolicy: value.tierBlockPolicy,
		tierPrices:
			value.tierPrices === undefined
				? undefined
				: (value.tierPrices as Array<any>).map(TierPriceToJSON)
	};
}
