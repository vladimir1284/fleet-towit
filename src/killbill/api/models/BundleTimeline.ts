/* tslint:disable */
/* eslint-disable */
/**
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditLog } from './AuditLog';
import {
    AuditLogFromJSON,
    AuditLogFromJSONTyped,
    AuditLogToJSON,
} from './AuditLog';
import type { EventSubscription } from './EventSubscription';
import {
    EventSubscriptionFromJSON,
    EventSubscriptionFromJSONTyped,
    EventSubscriptionToJSON,
} from './EventSubscription';

/**
 * 
 * @export
 * @interface BundleTimeline
 */
export interface BundleTimeline {
    /**
     * 
     * @type {string}
     * @memberof BundleTimeline
     */
    accountId?: string;
    /**
     * 
     * @type {string}
     * @memberof BundleTimeline
     */
    bundleId?: string;
    /**
     * 
     * @type {string}
     * @memberof BundleTimeline
     */
    externalKey?: string;
    /**
     * 
     * @type {Array<EventSubscription>}
     * @memberof BundleTimeline
     */
    events?: Array<EventSubscription>;
    /**
     * 
     * @type {Array<AuditLog>}
     * @memberof BundleTimeline
     */
    auditLogs?: Array<AuditLog>;
}

/**
 * Check if a given object implements the BundleTimeline interface.
 */
export function instanceOfBundleTimeline(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BundleTimelineFromJSON(json: any): BundleTimeline {
    return BundleTimelineFromJSONTyped(json, false);
}

export function BundleTimelineFromJSONTyped(json: any, ignoreDiscriminator: boolean): BundleTimeline {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'bundleId': !exists(json, 'bundleId') ? undefined : json['bundleId'],
        'externalKey': !exists(json, 'externalKey') ? undefined : json['externalKey'],
        'events': !exists(json, 'events') ? undefined : ((json['events'] as Array<any>).map(EventSubscriptionFromJSON)),
        'auditLogs': !exists(json, 'auditLogs') ? undefined : ((json['auditLogs'] as Array<any>).map(AuditLogFromJSON)),
    };
}

export function BundleTimelineToJSON(value?: BundleTimeline | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'bundleId': value.bundleId,
        'externalKey': value.externalKey,
        'events': value.events === undefined ? undefined : ((value.events as Array<any>).map(EventSubscriptionToJSON)),
        'auditLogs': value.auditLogs === undefined ? undefined : ((value.auditLogs as Array<any>).map(AuditLogToJSON)),
    };
}

