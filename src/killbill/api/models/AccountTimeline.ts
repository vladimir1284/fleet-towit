/* tslint:disable */
/* eslint-disable */
/**
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Account } from './Account';
import { AccountFromJSON, AccountFromJSONTyped, AccountToJSON } from './Account';
import type { Bundle } from './Bundle';
import { BundleFromJSON, BundleFromJSONTyped, BundleToJSON } from './Bundle';
import type { Invoice } from './Invoice';
import { InvoiceFromJSON, InvoiceFromJSONTyped, InvoiceToJSON } from './Invoice';
import type { InvoicePayment } from './InvoicePayment';
import {
	InvoicePaymentFromJSON,
	InvoicePaymentFromJSONTyped,
	InvoicePaymentToJSON
} from './InvoicePayment';

/**
 *
 * @export
 * @interface AccountTimeline
 */
export interface AccountTimeline {
	/**
	 *
	 * @type {Account}
	 * @memberof AccountTimeline
	 */
	account?: Account;
	/**
	 *
	 * @type {Array<Bundle>}
	 * @memberof AccountTimeline
	 */
	bundles?: Array<Bundle>;
	/**
	 *
	 * @type {Array<Invoice>}
	 * @memberof AccountTimeline
	 */
	invoices?: Array<Invoice>;
	/**
	 *
	 * @type {Array<InvoicePayment>}
	 * @memberof AccountTimeline
	 */
	payments?: Array<InvoicePayment>;
}

/**
 * Check if a given object implements the AccountTimeline interface.
 */
export function instanceOfAccountTimeline(value: object): boolean {
	let isInstance = true;

	return isInstance;
}

export function AccountTimelineFromJSON(json: any): AccountTimeline {
	return AccountTimelineFromJSONTyped(json, false);
}

export function AccountTimelineFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean
): AccountTimeline {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		account: !exists(json, 'account') ? undefined : AccountFromJSON(json['account']),
		bundles: !exists(json, 'bundles')
			? undefined
			: (json['bundles'] as Array<any>).map(BundleFromJSON),
		invoices: !exists(json, 'invoices')
			? undefined
			: (json['invoices'] as Array<any>).map(InvoiceFromJSON),
		payments: !exists(json, 'payments')
			? undefined
			: (json['payments'] as Array<any>).map(InvoicePaymentFromJSON)
	};
}

export function AccountTimelineToJSON(value?: AccountTimeline | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		account: AccountToJSON(value.account),
		bundles:
			value.bundles === undefined ? undefined : (value.bundles as Array<any>).map(BundleToJSON),
		invoices:
			value.invoices === undefined ? undefined : (value.invoices as Array<any>).map(InvoiceToJSON),
		payments:
			value.payments === undefined
				? undefined
				: (value.payments as Array<any>).map(InvoicePaymentToJSON)
	};
}
