/* tslint:disable */
/* eslint-disable */
/**
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UsagePrice } from './UsagePrice';
import {
    UsagePriceFromJSON,
    UsagePriceFromJSONTyped,
    UsagePriceToJSON,
} from './UsagePrice';

/**
 * 
 * @export
 * @interface PhasePrice
 */
export interface PhasePrice {
    /**
     * 
     * @type {string}
     * @memberof PhasePrice
     */
    planName?: string;
    /**
     * 
     * @type {string}
     * @memberof PhasePrice
     */
    phaseName?: string;
    /**
     * 
     * @type {string}
     * @memberof PhasePrice
     */
    phaseType?: string;
    /**
     * 
     * @type {number}
     * @memberof PhasePrice
     */
    fixedPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof PhasePrice
     */
    recurringPrice?: number;
    /**
     * 
     * @type {Array<UsagePrice>}
     * @memberof PhasePrice
     */
    usagePrices?: Array<UsagePrice>;
}

/**
 * Check if a given object implements the PhasePrice interface.
 */
export function instanceOfPhasePrice(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PhasePriceFromJSON(json: any): PhasePrice {
    return PhasePriceFromJSONTyped(json, false);
}

export function PhasePriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhasePrice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'planName': !exists(json, 'planName') ? undefined : json['planName'],
        'phaseName': !exists(json, 'phaseName') ? undefined : json['phaseName'],
        'phaseType': !exists(json, 'phaseType') ? undefined : json['phaseType'],
        'fixedPrice': !exists(json, 'fixedPrice') ? undefined : json['fixedPrice'],
        'recurringPrice': !exists(json, 'recurringPrice') ? undefined : json['recurringPrice'],
        'usagePrices': !exists(json, 'usagePrices') ? undefined : ((json['usagePrices'] as Array<any>).map(UsagePriceFromJSON)),
    };
}

export function PhasePriceToJSON(value?: PhasePrice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'planName': value.planName,
        'phaseName': value.phaseName,
        'phaseType': value.phaseType,
        'fixedPrice': value.fixedPrice,
        'recurringPrice': value.recurringPrice,
        'usagePrices': value.usagePrices === undefined ? undefined : ((value.usagePrices as Array<any>).map(UsagePriceToJSON)),
    };
}

