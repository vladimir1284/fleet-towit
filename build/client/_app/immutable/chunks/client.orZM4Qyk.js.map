{"version":3,"file":"client.orZM4Qyk.js","sources":["../../../../../../node_modules/.pnpm/@auth+sveltekit@0.4.0_@sveltejs+kit@2.0.6_nodemailer@6.9.7_svelte@4.2.8/node_modules/@auth/sveltekit/client.js"],"sourcesContent":["import { base } from \"$app/paths\";\n/**\n * Client-side method to initiate a signin flow\n * or send the user to the signin page listing all possible providers.\n * Automatically adds the CSRF token to the request.\n *\n * [Documentation](https://authjs.dev/reference/sveltekit/client#signin)\n */\nexport async function signIn(providerId, options, authorizationParams) {\n    const { callbackUrl = window.location.href, redirect = true } = options ?? {};\n    // TODO: Support custom providers\n    const isCredentials = providerId === \"credentials\";\n    const isEmail = providerId === \"email\";\n    const isSupportingReturn = isCredentials || isEmail;\n    const basePath = base ?? \"\";\n    const signInUrl = `${basePath}/auth/${isCredentials ? \"callback\" : \"signin\"}/${providerId}`;\n    const _signInUrl = `${signInUrl}?${new URLSearchParams(authorizationParams)}`;\n    // TODO: Remove this since Sveltekit offers the CSRF protection via origin check\n    const csrfTokenResponse = await fetch(`${basePath}/auth/csrf`);\n    const { csrfToken } = await csrfTokenResponse.json();\n    const res = await fetch(_signInUrl, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"X-Auth-Return-Redirect\": \"1\",\n        },\n        // @ts-ignore\n        body: new URLSearchParams({\n            ...options,\n            csrfToken,\n            callbackUrl,\n        }),\n    });\n    const data = await res.clone().json();\n    if (redirect || !isSupportingReturn) {\n        // TODO: Do not redirect for Credentials and Email providers by default in next major\n        window.location.href = data.url ?? callbackUrl;\n        // If url contains a hash, the browser does not reload the page. We reload manually\n        if (data.url.includes(\"#\"))\n            window.location.reload();\n        return;\n    }\n    return res;\n}\n/**\n * Signs the user out, by removing the session cookie.\n * Automatically adds the CSRF token to the request.\n *\n * [Documentation](https://authjs.dev/reference/sveltekit/client#signout)\n */\nexport async function signOut(options) {\n    const { callbackUrl = window.location.href } = options ?? {};\n    const basePath = base ?? \"\";\n    // TODO: Remove this since Sveltekit offers the CSRF protection via origin check\n    const csrfTokenResponse = await fetch(`${basePath}/auth/csrf`);\n    const { csrfToken } = await csrfTokenResponse.json();\n    const res = await fetch(`${basePath}/auth/signout`, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"X-Auth-Return-Redirect\": \"1\",\n        },\n        body: new URLSearchParams({\n            csrfToken,\n            callbackUrl,\n        }),\n    });\n    const data = await res.json();\n    const url = data.url ?? callbackUrl;\n    window.location.href = url;\n    // If url contains a hash, the browser does not reload the page. We reload manually\n    if (url.includes(\"#\"))\n        window.location.reload();\n}\n"],"names":["signIn","providerId","options","authorizationParams","callbackUrl","redirect","isCredentials","isSupportingReturn","basePath","base","_signInUrl","csrfTokenResponse","csrfToken","res","data","signOut","url"],"mappings":"wCAQO,eAAeA,EAAOC,EAAYC,EAASC,EAAqB,CACnE,KAAM,CAAE,YAAAC,EAAc,OAAO,SAAS,KAAM,SAAAC,EAAW,EAAI,EAAKH,GAAW,GAErEI,EAAgBL,IAAe,cAE/BM,EAAqBD,GADXL,IAAe,QAEzBO,EAAWC,GAAQ,GAEnBC,EAAa,GADD,GAAGF,CAAQ,SAASF,EAAgB,WAAa,QAAQ,IAAIL,CAAU,EAC1D,IAAI,IAAI,gBAAgBE,CAAmB,CAAC,GAErEQ,EAAoB,MAAM,MAAM,GAAGH,CAAQ,YAAY,EACvD,CAAE,UAAAI,CAAW,EAAG,MAAMD,EAAkB,KAAI,EAC5CE,EAAM,MAAM,MAAMH,EAAY,CAChC,OAAQ,OACR,QAAS,CACL,eAAgB,oCAChB,yBAA0B,GAC7B,EAED,KAAM,IAAI,gBAAgB,CACtB,GAAGR,EACH,UAAAU,EACA,YAAAR,CACZ,CAAS,CACT,CAAK,EACKU,EAAO,MAAMD,EAAI,MAAO,EAAC,KAAI,EACnC,GAAIR,GAAY,CAACE,EAAoB,CAEjC,OAAO,SAAS,KAAOO,EAAK,KAAOV,EAE/BU,EAAK,IAAI,SAAS,GAAG,GACrB,OAAO,SAAS,SACpB,MACH,CACD,OAAOD,CACX,CAOO,eAAeE,EAAQb,EAAS,CACnC,KAAM,CAAE,YAAAE,EAAc,OAAO,SAAS,IAAM,EAAGF,GAAW,GACpDM,EAAWC,GAAQ,GAEnBE,EAAoB,MAAM,MAAM,GAAGH,CAAQ,YAAY,EACvD,CAAE,UAAAI,CAAW,EAAG,MAAMD,EAAkB,KAAI,EAa5CK,GADO,MAXD,MAAM,MAAM,GAAGR,CAAQ,gBAAiB,CAChD,OAAQ,OACR,QAAS,CACL,eAAgB,oCAChB,yBAA0B,GAC7B,EACD,KAAM,IAAI,gBAAgB,CACtB,UAAAI,EACA,YAAAR,CACZ,CAAS,CACT,CAAK,GACsB,QACN,KAAOA,EACxB,OAAO,SAAS,KAAOY,EAEnBA,EAAI,SAAS,GAAG,GAChB,OAAO,SAAS,QACxB"}