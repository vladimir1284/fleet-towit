{"version":3,"file":"stringify.ZBF_Z-nX.js","sources":["../../../../../../node_modules/.pnpm/devalue@4.3.2/node_modules/devalue/src/utils.js","../../../../../../node_modules/.pnpm/devalue@4.3.2/node_modules/devalue/src/constants.js","../../../../../../node_modules/.pnpm/devalue@4.3.2/node_modules/devalue/src/parse.js","../../../../../../node_modules/.pnpm/devalue@4.3.2/node_modules/devalue/src/stringify.js"],"sourcesContent":["/** @type {Record<string, string>} */\nexport const escaped = {\n\t'<': '\\\\u003C',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t',\n\t'\\u2028': '\\\\u2028',\n\t'\\u2029': '\\\\u2029'\n};\n\nexport class DevalueError extends Error {\n\t/**\n\t * @param {string} message\n\t * @param {string[]} keys\n\t */\n\tconstructor(message, keys) {\n\t\tsuper(message);\n\t\tthis.name = 'DevalueError';\n\t\tthis.path = keys.join('');\n\t}\n}\n\n/** @param {any} thing */\nexport function is_primitive(thing) {\n\treturn Object(thing) !== thing;\n}\n\nconst object_proto_names = /* @__PURE__ */ Object.getOwnPropertyNames(\n\tObject.prototype\n)\n\t.sort()\n\t.join('\\0');\n\n/** @param {any} thing */\nexport function is_plain_object(thing) {\n\tconst proto = Object.getPrototypeOf(thing);\n\n\treturn (\n\t\tproto === Object.prototype ||\n\t\tproto === null ||\n\t\tObject.getOwnPropertyNames(proto).sort().join('\\0') === object_proto_names\n\t);\n}\n\n/** @param {any} thing */\nexport function get_type(thing) {\n\treturn Object.prototype.toString.call(thing).slice(8, -1);\n}\n\n/** @param {string} char */\nfunction get_escaped_char(char) {\n\tswitch (char) {\n\t\tcase '\"':\n\t\t\treturn '\\\\\"';\n\t\tcase '<':\n\t\t\treturn '\\\\u003C';\n\t\tcase '\\\\':\n\t\t\treturn '\\\\\\\\';\n\t\tcase '\\n':\n\t\t\treturn '\\\\n';\n\t\tcase '\\r':\n\t\t\treturn '\\\\r';\n\t\tcase '\\t':\n\t\t\treturn '\\\\t';\n\t\tcase '\\b':\n\t\t\treturn '\\\\b';\n\t\tcase '\\f':\n\t\t\treturn '\\\\f';\n\t\tcase '\\u2028':\n\t\t\treturn '\\\\u2028';\n\t\tcase '\\u2029':\n\t\t\treturn '\\\\u2029';\n\t\tdefault:\n\t\t\treturn char < ' '\n\t\t\t\t? `\\\\u${char.charCodeAt(0).toString(16).padStart(4, '0')}`\n\t\t\t\t: '';\n\t}\n}\n\n/** @param {string} str */\nexport function stringify_string(str) {\n\tlet result = '';\n\tlet last_pos = 0;\n\tconst len = str.length;\n\n\tfor (let i = 0; i < len; i += 1) {\n\t\tconst char = str[i];\n\t\tconst replacement = get_escaped_char(char);\n\t\tif (replacement) {\n\t\t\tresult += str.slice(last_pos, i) + replacement;\n\t\t\tlast_pos = i + 1;\n\t\t}\n\t}\n\n\treturn `\"${last_pos === 0 ? str : result + str.slice(last_pos)}\"`;\n}\n","export const UNDEFINED = -1;\nexport const HOLE = -2;\nexport const NAN = -3;\nexport const POSITIVE_INFINITY = -4;\nexport const NEGATIVE_INFINITY = -5;\nexport const NEGATIVE_ZERO = -6;\n","import {\n\tHOLE,\n\tNAN,\n\tNEGATIVE_INFINITY,\n\tNEGATIVE_ZERO,\n\tPOSITIVE_INFINITY,\n\tUNDEFINED\n} from './constants.js';\n\n/**\n * Revive a value serialized with `devalue.stringify`\n * @param {string} serialized\n * @param {Record<string, (value: any) => any>} [revivers]\n */\nexport function parse(serialized, revivers) {\n\treturn unflatten(JSON.parse(serialized), revivers);\n}\n\n/**\n * Revive a value flattened with `devalue.stringify`\n * @param {number | any[]} parsed\n * @param {Record<string, (value: any) => any>} [revivers]\n */\nexport function unflatten(parsed, revivers) {\n\tif (typeof parsed === 'number') return hydrate(parsed, true);\n\n\tif (!Array.isArray(parsed) || parsed.length === 0) {\n\t\tthrow new Error('Invalid input');\n\t}\n\n\tconst values = /** @type {any[]} */ (parsed);\n\n\tconst hydrated = Array(values.length);\n\n\t/**\n\t * @param {number} index\n\t * @returns {any}\n\t */\n\tfunction hydrate(index, standalone = false) {\n\t\tif (index === UNDEFINED) return undefined;\n\t\tif (index === NAN) return NaN;\n\t\tif (index === POSITIVE_INFINITY) return Infinity;\n\t\tif (index === NEGATIVE_INFINITY) return -Infinity;\n\t\tif (index === NEGATIVE_ZERO) return -0;\n\n\t\tif (standalone) throw new Error(`Invalid input`);\n\n\t\tif (index in hydrated) return hydrated[index];\n\n\t\tconst value = values[index];\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\thydrated[index] = value;\n\t\t} else if (Array.isArray(value)) {\n\t\t\tif (typeof value[0] === 'string') {\n\t\t\t\tconst type = value[0];\n\n\t\t\t\tconst reviver = revivers?.[type];\n\t\t\t\tif (reviver) {\n\t\t\t\t\treturn (hydrated[index] = reviver(hydrate(value[1])));\n\t\t\t\t}\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'Date':\n\t\t\t\t\t\thydrated[index] = new Date(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Set':\n\t\t\t\t\t\tconst set = new Set();\n\t\t\t\t\t\thydrated[index] = set;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 1) {\n\t\t\t\t\t\t\tset.add(hydrate(value[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Map':\n\t\t\t\t\t\tconst map = new Map();\n\t\t\t\t\t\thydrated[index] = map;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tmap.set(hydrate(value[i]), hydrate(value[i + 1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RegExp':\n\t\t\t\t\t\thydrated[index] = new RegExp(value[1], value[2]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\thydrated[index] = Object(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BigInt':\n\t\t\t\t\t\thydrated[index] = BigInt(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'null':\n\t\t\t\t\t\tconst obj = Object.create(null);\n\t\t\t\t\t\thydrated[index] = obj;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tobj[value[i]] = hydrate(value[i + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unknown type ${type}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = new Array(value.length);\n\t\t\t\thydrated[index] = array;\n\n\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\tconst n = value[i];\n\t\t\t\t\tif (n === HOLE) continue;\n\n\t\t\t\t\tarray[i] = hydrate(n);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tconst object = {};\n\t\t\thydrated[index] = object;\n\n\t\t\tfor (const key in value) {\n\t\t\t\tconst n = value[key];\n\t\t\t\tobject[key] = hydrate(n);\n\t\t\t}\n\t\t}\n\n\t\treturn hydrated[index];\n\t}\n\n\treturn hydrate(0);\n}\n","import {\n\tDevalueError,\n\tget_type,\n\tis_plain_object,\n\tis_primitive,\n\tstringify_string\n} from './utils.js';\nimport {\n\tHOLE,\n\tNAN,\n\tNEGATIVE_INFINITY,\n\tNEGATIVE_ZERO,\n\tPOSITIVE_INFINITY,\n\tUNDEFINED\n} from './constants.js';\n\n/**\n * Turn a value into a JSON string that can be parsed with `devalue.parse`\n * @param {any} value\n * @param {Record<string, (value: any) => any>} [reducers]\n */\nexport function stringify(value, reducers) {\n\t/** @type {any[]} */\n\tconst stringified = [];\n\n\t/** @type {Map<any, number>} */\n\tconst indexes = new Map();\n\n\t/** @type {Array<{ key: string, fn: (value: any) => any }>} */\n\tconst custom = [];\n\tfor (const key in reducers) {\n\t\tcustom.push({ key, fn: reducers[key] });\n\t}\n\n\t/** @type {string[]} */\n\tconst keys = [];\n\n\tlet p = 0;\n\n\t/** @param {any} thing */\n\tfunction flatten(thing) {\n\t\tif (typeof thing === 'function') {\n\t\t\tthrow new DevalueError(`Cannot stringify a function`, keys);\n\t\t}\n\n\t\tif (indexes.has(thing)) return indexes.get(thing);\n\n\t\tif (thing === undefined) return UNDEFINED;\n\t\tif (Number.isNaN(thing)) return NAN;\n\t\tif (thing === Infinity) return POSITIVE_INFINITY;\n\t\tif (thing === -Infinity) return NEGATIVE_INFINITY;\n\t\tif (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO;\n\n\t\tconst index = p++;\n\t\tindexes.set(thing, index);\n\n\t\tfor (const { key, fn } of custom) {\n\t\t\tconst value = fn(thing);\n\t\t\tif (value) {\n\t\t\t\tstringified[index] = `[\"${key}\",${flatten(value)}]`;\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\n\t\tlet str = '';\n\n\t\tif (is_primitive(thing)) {\n\t\t\tstr = stringify_primitive(thing);\n\t\t} else {\n\t\t\tconst type = get_type(thing);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'String':\n\t\t\t\tcase 'Boolean':\n\t\t\t\t\tstr = `[\"Object\",${stringify_primitive(thing)}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BigInt':\n\t\t\t\t\tstr = `[\"BigInt\",${thing}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Date':\n\t\t\t\t\tstr = `[\"Date\",\"${thing.toISOString()}\"]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RegExp':\n\t\t\t\t\tconst { source, flags } = thing;\n\t\t\t\t\tstr = flags\n\t\t\t\t\t\t? `[\"RegExp\",${stringify_string(source)},\"${flags}\"]`\n\t\t\t\t\t\t: `[\"RegExp\",${stringify_string(source)}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tstr = '[';\n\n\t\t\t\t\tfor (let i = 0; i < thing.length; i += 1) {\n\t\t\t\t\t\tif (i > 0) str += ',';\n\n\t\t\t\t\t\tif (i in thing) {\n\t\t\t\t\t\t\tkeys.push(`[${i}]`);\n\t\t\t\t\t\t\tstr += flatten(thing[i]);\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr += HOLE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Set':\n\t\t\t\t\tstr = '[\"Set\"';\n\n\t\t\t\t\tfor (const value of thing) {\n\t\t\t\t\t\tstr += `,${flatten(value)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Map':\n\t\t\t\t\tstr = '[\"Map\"';\n\n\t\t\t\t\tfor (const [key, value] of thing) {\n\t\t\t\t\t\tkeys.push(\n\t\t\t\t\t\t\t`.get(${is_primitive(key) ? stringify_primitive(key) : '...'})`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstr += `,${flatten(key)},${flatten(value)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (!is_plain_object(thing)) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify arbitrary non-POJOs`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Object.getOwnPropertySymbols(thing).length > 0) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify POJOs with symbolic keys`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Object.getPrototypeOf(thing) === null) {\n\t\t\t\t\t\tstr = '[\"null\"';\n\t\t\t\t\t\tfor (const key in thing) {\n\t\t\t\t\t\t\tkeys.push(`.${key}`);\n\t\t\t\t\t\t\tstr += `,${stringify_string(key)},${flatten(thing[key])}`;\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr = '{';\n\t\t\t\t\t\tlet started = false;\n\t\t\t\t\t\tfor (const key in thing) {\n\t\t\t\t\t\t\tif (started) str += ',';\n\t\t\t\t\t\t\tstarted = true;\n\t\t\t\t\t\t\tkeys.push(`.${key}`);\n\t\t\t\t\t\t\tstr += `${stringify_string(key)}:${flatten(thing[key])}`;\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += '}';\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstringified[index] = str;\n\t\treturn index;\n\t}\n\n\tconst index = flatten(value);\n\n\t// special case — value is represented as a negative index\n\tif (index < 0) return `${index}`;\n\n\treturn `[${stringified.join(',')}]`;\n}\n\n/**\n * @param {any} thing\n * @returns {string}\n */\nfunction stringify_primitive(thing) {\n\tconst type = typeof thing;\n\tif (type === 'string') return stringify_string(thing);\n\tif (thing instanceof String) return stringify_string(thing.toString());\n\tif (thing === void 0) return UNDEFINED.toString();\n\tif (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO.toString();\n\tif (type === 'bigint') return `[\"BigInt\",\"${thing}\"]`;\n\treturn String(thing);\n}\n"],"names":["char","stringify_string","str","result","last_pos","len","i","replacement","get_escaped_char","UNDEFINED","HOLE","NAN","POSITIVE_INFINITY","NEGATIVE_INFINITY","NEGATIVE_ZERO","parse","serialized","revivers","unflatten","parsed","hydrate","values","hydrated","index","standalone","value","type","reviver","set","map","obj","array","n","object","key","stringify","reducers","stringified","indexes","custom","keys","p","flatten","thing","DevalueError","fn","is_primitive","stringify_primitive","get_type","source","flags","is_plain_object","started","message","object_proto_names","proto"],"mappings":"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"}